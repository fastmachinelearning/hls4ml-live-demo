// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "trace_cntrl_32.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic trace_cntrl_32::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic trace_cntrl_32::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> trace_cntrl_32::ap_ST_fsm_state1 = "1";
const sc_lv<3> trace_cntrl_32::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> trace_cntrl_32::ap_ST_fsm_state5 = "100";
const sc_lv<32> trace_cntrl_32::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool trace_cntrl_32::ap_const_boolean_1 = true;
const sc_lv<32> trace_cntrl_32::ap_const_lv32_1 = "1";
const bool trace_cntrl_32::ap_const_boolean_0 = false;
const sc_lv<1> trace_cntrl_32::ap_const_lv1_1 = "1";
const int trace_cntrl_32::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<1> trace_cntrl_32::ap_const_lv1_0 = "0";
const sc_lv<32> trace_cntrl_32::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> trace_cntrl_32::ap_const_lv32_2 = "10";

trace_cntrl_32::trace_cntrl_32(sc_module_name name) : sc_module(name), mVcdFile(0) {
    trace_cntrl_32_trace_cntrl_s_axi_U = new trace_cntrl_32_trace_cntrl_s_axi<C_S_AXI_TRACE_CNTRL_ADDR_WIDTH,C_S_AXI_TRACE_CNTRL_DATA_WIDTH>("trace_cntrl_32_trace_cntrl_s_axi_U");
    trace_cntrl_32_trace_cntrl_s_axi_U->AWVALID(s_axi_trace_cntrl_AWVALID);
    trace_cntrl_32_trace_cntrl_s_axi_U->AWREADY(s_axi_trace_cntrl_AWREADY);
    trace_cntrl_32_trace_cntrl_s_axi_U->AWADDR(s_axi_trace_cntrl_AWADDR);
    trace_cntrl_32_trace_cntrl_s_axi_U->WVALID(s_axi_trace_cntrl_WVALID);
    trace_cntrl_32_trace_cntrl_s_axi_U->WREADY(s_axi_trace_cntrl_WREADY);
    trace_cntrl_32_trace_cntrl_s_axi_U->WDATA(s_axi_trace_cntrl_WDATA);
    trace_cntrl_32_trace_cntrl_s_axi_U->WSTRB(s_axi_trace_cntrl_WSTRB);
    trace_cntrl_32_trace_cntrl_s_axi_U->ARVALID(s_axi_trace_cntrl_ARVALID);
    trace_cntrl_32_trace_cntrl_s_axi_U->ARREADY(s_axi_trace_cntrl_ARREADY);
    trace_cntrl_32_trace_cntrl_s_axi_U->ARADDR(s_axi_trace_cntrl_ARADDR);
    trace_cntrl_32_trace_cntrl_s_axi_U->RVALID(s_axi_trace_cntrl_RVALID);
    trace_cntrl_32_trace_cntrl_s_axi_U->RREADY(s_axi_trace_cntrl_RREADY);
    trace_cntrl_32_trace_cntrl_s_axi_U->RDATA(s_axi_trace_cntrl_RDATA);
    trace_cntrl_32_trace_cntrl_s_axi_U->RRESP(s_axi_trace_cntrl_RRESP);
    trace_cntrl_32_trace_cntrl_s_axi_U->BVALID(s_axi_trace_cntrl_BVALID);
    trace_cntrl_32_trace_cntrl_s_axi_U->BREADY(s_axi_trace_cntrl_BREADY);
    trace_cntrl_32_trace_cntrl_s_axi_U->BRESP(s_axi_trace_cntrl_BRESP);
    trace_cntrl_32_trace_cntrl_s_axi_U->ACLK(ap_clk);
    trace_cntrl_32_trace_cntrl_s_axi_U->ARESET(ap_rst_n_inv);
    trace_cntrl_32_trace_cntrl_s_axi_U->ACLK_EN(ap_var_for_const0);
    trace_cntrl_32_trace_cntrl_s_axi_U->ap_start(ap_start);
    trace_cntrl_32_trace_cntrl_s_axi_U->interrupt(interrupt);
    trace_cntrl_32_trace_cntrl_s_axi_U->ap_ready(ap_ready);
    trace_cntrl_32_trace_cntrl_s_axi_U->ap_done(ap_done);
    trace_cntrl_32_trace_cntrl_s_axi_U->ap_idle(ap_idle);
    trace_cntrl_32_trace_cntrl_s_axi_U->trigger_V(trigger_V);
    trace_cntrl_32_trace_cntrl_s_axi_U->length_r(length_r);
    regslice_both_trace_32_data_V_U = new regslice_both<32>("regslice_both_trace_32_data_V_U");
    regslice_both_trace_32_data_V_U->ap_clk(ap_clk);
    regslice_both_trace_32_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_trace_32_data_V_U->data_in(trace_32_TDATA);
    regslice_both_trace_32_data_V_U->vld_in(trace_32_TVALID);
    regslice_both_trace_32_data_V_U->ack_in(regslice_both_trace_32_data_V_U_ack_in);
    regslice_both_trace_32_data_V_U->data_out(trace_32_TDATA_int);
    regslice_both_trace_32_data_V_U->vld_out(trace_32_TVALID_int);
    regslice_both_trace_32_data_V_U->ack_out(trace_32_TREADY_int);
    regslice_both_trace_32_data_V_U->apdone_blk(regslice_both_trace_32_data_V_U_apdone_blk);
    regslice_both_trace_32_keep_V_U = new regslice_both<4>("regslice_both_trace_32_keep_V_U");
    regslice_both_trace_32_keep_V_U->ap_clk(ap_clk);
    regslice_both_trace_32_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_trace_32_keep_V_U->data_in(trace_32_TKEEP);
    regslice_both_trace_32_keep_V_U->vld_in(trace_32_TVALID);
    regslice_both_trace_32_keep_V_U->ack_in(regslice_both_trace_32_keep_V_U_ack_in);
    regslice_both_trace_32_keep_V_U->data_out(trace_32_TKEEP_int);
    regslice_both_trace_32_keep_V_U->vld_out(regslice_both_trace_32_keep_V_U_vld_out);
    regslice_both_trace_32_keep_V_U->ack_out(trace_32_TREADY_int);
    regslice_both_trace_32_keep_V_U->apdone_blk(regslice_both_trace_32_keep_V_U_apdone_blk);
    regslice_both_trace_32_strb_V_U = new regslice_both<4>("regslice_both_trace_32_strb_V_U");
    regslice_both_trace_32_strb_V_U->ap_clk(ap_clk);
    regslice_both_trace_32_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_trace_32_strb_V_U->data_in(trace_32_TSTRB);
    regslice_both_trace_32_strb_V_U->vld_in(trace_32_TVALID);
    regslice_both_trace_32_strb_V_U->ack_in(regslice_both_trace_32_strb_V_U_ack_in);
    regslice_both_trace_32_strb_V_U->data_out(trace_32_TSTRB_int);
    regslice_both_trace_32_strb_V_U->vld_out(regslice_both_trace_32_strb_V_U_vld_out);
    regslice_both_trace_32_strb_V_U->ack_out(trace_32_TREADY_int);
    regslice_both_trace_32_strb_V_U->apdone_blk(regslice_both_trace_32_strb_V_U_apdone_blk);
    regslice_both_trace_32_user_V_U = new regslice_both<1>("regslice_both_trace_32_user_V_U");
    regslice_both_trace_32_user_V_U->ap_clk(ap_clk);
    regslice_both_trace_32_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_trace_32_user_V_U->data_in(trace_32_TUSER);
    regslice_both_trace_32_user_V_U->vld_in(trace_32_TVALID);
    regslice_both_trace_32_user_V_U->ack_in(regslice_both_trace_32_user_V_U_ack_in);
    regslice_both_trace_32_user_V_U->data_out(trace_32_TUSER_int);
    regslice_both_trace_32_user_V_U->vld_out(regslice_both_trace_32_user_V_U_vld_out);
    regslice_both_trace_32_user_V_U->ack_out(trace_32_TREADY_int);
    regslice_both_trace_32_user_V_U->apdone_blk(regslice_both_trace_32_user_V_U_apdone_blk);
    regslice_both_trace_32_last_V_U = new regslice_both<1>("regslice_both_trace_32_last_V_U");
    regslice_both_trace_32_last_V_U->ap_clk(ap_clk);
    regslice_both_trace_32_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_trace_32_last_V_U->data_in(trace_32_TLAST);
    regslice_both_trace_32_last_V_U->vld_in(trace_32_TVALID);
    regslice_both_trace_32_last_V_U->ack_in(regslice_both_trace_32_last_V_U_ack_in);
    regslice_both_trace_32_last_V_U->data_out(trace_32_TLAST_int);
    regslice_both_trace_32_last_V_U->vld_out(regslice_both_trace_32_last_V_U_vld_out);
    regslice_both_trace_32_last_V_U->ack_out(trace_32_TREADY_int);
    regslice_both_trace_32_last_V_U->apdone_blk(regslice_both_trace_32_last_V_U_apdone_blk);
    regslice_both_trace_32_id_V_U = new regslice_both<1>("regslice_both_trace_32_id_V_U");
    regslice_both_trace_32_id_V_U->ap_clk(ap_clk);
    regslice_both_trace_32_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_trace_32_id_V_U->data_in(trace_32_TID);
    regslice_both_trace_32_id_V_U->vld_in(trace_32_TVALID);
    regslice_both_trace_32_id_V_U->ack_in(regslice_both_trace_32_id_V_U_ack_in);
    regslice_both_trace_32_id_V_U->data_out(trace_32_TID_int);
    regslice_both_trace_32_id_V_U->vld_out(regslice_both_trace_32_id_V_U_vld_out);
    regslice_both_trace_32_id_V_U->ack_out(trace_32_TREADY_int);
    regslice_both_trace_32_id_V_U->apdone_blk(regslice_both_trace_32_id_V_U_apdone_blk);
    regslice_both_trace_32_dest_V_U = new regslice_both<1>("regslice_both_trace_32_dest_V_U");
    regslice_both_trace_32_dest_V_U->ap_clk(ap_clk);
    regslice_both_trace_32_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_trace_32_dest_V_U->data_in(trace_32_TDEST);
    regslice_both_trace_32_dest_V_U->vld_in(trace_32_TVALID);
    regslice_both_trace_32_dest_V_U->ack_in(regslice_both_trace_32_dest_V_U_ack_in);
    regslice_both_trace_32_dest_V_U->data_out(trace_32_TDEST_int);
    regslice_both_trace_32_dest_V_U->vld_out(regslice_both_trace_32_dest_V_U_vld_out);
    regslice_both_trace_32_dest_V_U->ack_out(trace_32_TREADY_int);
    regslice_both_trace_32_dest_V_U->apdone_blk(regslice_both_trace_32_dest_V_U_apdone_blk);
    regslice_both_capture_32_data_V_U = new regslice_both<32>("regslice_both_capture_32_data_V_U");
    regslice_both_capture_32_data_V_U->ap_clk(ap_clk);
    regslice_both_capture_32_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_capture_32_data_V_U->data_in(trace_temp_data_V_reg_280);
    regslice_both_capture_32_data_V_U->vld_in(capture_32_TVALID_int);
    regslice_both_capture_32_data_V_U->ack_in(capture_32_TREADY_int);
    regslice_both_capture_32_data_V_U->data_out(capture_32_TDATA);
    regslice_both_capture_32_data_V_U->vld_out(regslice_both_capture_32_data_V_U_vld_out);
    regslice_both_capture_32_data_V_U->ack_out(capture_32_TREADY);
    regslice_both_capture_32_data_V_U->apdone_blk(regslice_both_capture_32_data_V_U_apdone_blk);
    regslice_both_capture_32_keep_V_U = new regslice_both<4>("regslice_both_capture_32_keep_V_U");
    regslice_both_capture_32_keep_V_U->ap_clk(ap_clk);
    regslice_both_capture_32_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_capture_32_keep_V_U->data_in(trace_temp_keep_V_reg_285);
    regslice_both_capture_32_keep_V_U->vld_in(capture_32_TVALID_int);
    regslice_both_capture_32_keep_V_U->ack_in(regslice_both_capture_32_keep_V_U_ack_in_dummy);
    regslice_both_capture_32_keep_V_U->data_out(capture_32_TKEEP);
    regslice_both_capture_32_keep_V_U->vld_out(regslice_both_capture_32_keep_V_U_vld_out);
    regslice_both_capture_32_keep_V_U->ack_out(capture_32_TREADY);
    regslice_both_capture_32_keep_V_U->apdone_blk(regslice_both_capture_32_keep_V_U_apdone_blk);
    regslice_both_capture_32_strb_V_U = new regslice_both<4>("regslice_both_capture_32_strb_V_U");
    regslice_both_capture_32_strb_V_U->ap_clk(ap_clk);
    regslice_both_capture_32_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_capture_32_strb_V_U->data_in(trace_temp_strb_V_reg_290);
    regslice_both_capture_32_strb_V_U->vld_in(capture_32_TVALID_int);
    regslice_both_capture_32_strb_V_U->ack_in(regslice_both_capture_32_strb_V_U_ack_in_dummy);
    regslice_both_capture_32_strb_V_U->data_out(capture_32_TSTRB);
    regslice_both_capture_32_strb_V_U->vld_out(regslice_both_capture_32_strb_V_U_vld_out);
    regslice_both_capture_32_strb_V_U->ack_out(capture_32_TREADY);
    regslice_both_capture_32_strb_V_U->apdone_blk(regslice_both_capture_32_strb_V_U_apdone_blk);
    regslice_both_capture_32_user_V_U = new regslice_both<1>("regslice_both_capture_32_user_V_U");
    regslice_both_capture_32_user_V_U->ap_clk(ap_clk);
    regslice_both_capture_32_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_capture_32_user_V_U->data_in(trace_temp_user_V_reg_295);
    regslice_both_capture_32_user_V_U->vld_in(capture_32_TVALID_int);
    regslice_both_capture_32_user_V_U->ack_in(regslice_both_capture_32_user_V_U_ack_in_dummy);
    regslice_both_capture_32_user_V_U->data_out(capture_32_TUSER);
    regslice_both_capture_32_user_V_U->vld_out(regslice_both_capture_32_user_V_U_vld_out);
    regslice_both_capture_32_user_V_U->ack_out(capture_32_TREADY);
    regslice_both_capture_32_user_V_U->apdone_blk(regslice_both_capture_32_user_V_U_apdone_blk);
    regslice_both_capture_32_last_V_U = new regslice_both<1>("regslice_both_capture_32_last_V_U");
    regslice_both_capture_32_last_V_U->ap_clk(ap_clk);
    regslice_both_capture_32_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_capture_32_last_V_U->data_in(trace_temp_last_V_reg_315);
    regslice_both_capture_32_last_V_U->vld_in(capture_32_TVALID_int);
    regslice_both_capture_32_last_V_U->ack_in(regslice_both_capture_32_last_V_U_ack_in_dummy);
    regslice_both_capture_32_last_V_U->data_out(capture_32_TLAST);
    regslice_both_capture_32_last_V_U->vld_out(regslice_both_capture_32_last_V_U_vld_out);
    regslice_both_capture_32_last_V_U->ack_out(capture_32_TREADY);
    regslice_both_capture_32_last_V_U->apdone_blk(regslice_both_capture_32_last_V_U_apdone_blk);
    regslice_both_capture_32_id_V_U = new regslice_both<1>("regslice_both_capture_32_id_V_U");
    regslice_both_capture_32_id_V_U->ap_clk(ap_clk);
    regslice_both_capture_32_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_capture_32_id_V_U->data_in(trace_temp_id_V_reg_300);
    regslice_both_capture_32_id_V_U->vld_in(capture_32_TVALID_int);
    regslice_both_capture_32_id_V_U->ack_in(regslice_both_capture_32_id_V_U_ack_in_dummy);
    regslice_both_capture_32_id_V_U->data_out(capture_32_TID);
    regslice_both_capture_32_id_V_U->vld_out(regslice_both_capture_32_id_V_U_vld_out);
    regslice_both_capture_32_id_V_U->ack_out(capture_32_TREADY);
    regslice_both_capture_32_id_V_U->apdone_blk(regslice_both_capture_32_id_V_U_apdone_blk);
    regslice_both_capture_32_dest_V_U = new regslice_both<1>("regslice_both_capture_32_dest_V_U");
    regslice_both_capture_32_dest_V_U->ap_clk(ap_clk);
    regslice_both_capture_32_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_capture_32_dest_V_U->data_in(trace_temp_dest_V_reg_305);
    regslice_both_capture_32_dest_V_U->vld_in(capture_32_TVALID_int);
    regslice_both_capture_32_dest_V_U->ack_in(regslice_both_capture_32_dest_V_U_ack_in_dummy);
    regslice_both_capture_32_dest_V_U->data_out(capture_32_TDEST);
    regslice_both_capture_32_dest_V_U->vld_out(regslice_both_capture_32_dest_V_U_vld_out);
    regslice_both_capture_32_dest_V_U->ack_out(capture_32_TREADY);
    regslice_both_capture_32_dest_V_U->apdone_blk(regslice_both_capture_32_dest_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln27_fu_165_p2);
    sensitive << ( length_r );

    SC_METHOD(thread_and_ln23_fu_205_p2);
    sensitive << ( trigger_V_read_reg_265 );
    sensitive << ( trace_32_TDATA_int );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln20_fu_176_p2 );
    sensitive << ( trace_32_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln20_fu_176_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( trace_32_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln20_fu_176_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state4_io );
    sensitive << ( trace_32_TVALID_int );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( icmp_ln20_fu_176_p2 );
    sensitive << ( trace_32_TVALID_int );

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( ap_predicate_op58_write_state3 );
    sensitive << ( capture_32_TREADY_int );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( ap_predicate_op61_write_state4 );
    sensitive << ( capture_32_TREADY_int );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln20_fu_176_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( regslice_both_capture_32_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_i_1_phi_fu_158_p4);
    sensitive << ( icmp_ln20_fu_176_p2 );
    sensitive << ( i_0_reg_144 );
    sensitive << ( or_ln23_fu_215_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_i_1_reg_155 );
    sensitive << ( i_fu_221_p2 );

    SC_METHOD(thread_ap_phi_mux_match_0_phi_fu_137_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln20_reg_276 );
    sensitive << ( or_ln23_reg_310 );
    sensitive << ( match_0_reg_133 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_i_1_reg_155);

    SC_METHOD(thread_ap_predicate_op58_write_state3);
    sensitive << ( icmp_ln20_reg_276 );
    sensitive << ( or_ln23_reg_310 );

    SC_METHOD(thread_ap_predicate_op61_write_state4);
    sensitive << ( icmp_ln20_reg_276_pp0_iter1_reg );
    sensitive << ( or_ln23_reg_310_pp0_iter1_reg );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( regslice_both_capture_32_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_capture_32_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln20_reg_276 );
    sensitive << ( or_ln23_reg_310 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln20_reg_276_pp0_iter1_reg );
    sensitive << ( or_ln23_reg_310_pp0_iter1_reg );
    sensitive << ( capture_32_TREADY_int );

    SC_METHOD(thread_capture_32_TVALID);
    sensitive << ( regslice_both_capture_32_data_V_U_vld_out );

    SC_METHOD(thread_capture_32_TVALID_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op58_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_2_fu_247_p2);
    sensitive << ( ap_phi_mux_i_1_phi_fu_158_p4 );

    SC_METHOD(thread_i_fu_221_p2);
    sensitive << ( i_0_reg_144 );

    SC_METHOD(thread_icmp_ln20_fu_176_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_0_reg_144 );
    sensitive << ( length_read_reg_260 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln23_fu_210_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln20_fu_176_p2 );
    sensitive << ( trigger_V_read_reg_265 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln23_fu_205_p2 );

    SC_METHOD(thread_or_ln23_fu_215_p2);
    sensitive << ( ap_phi_mux_match_0_phi_fu_137_p4 );
    sensitive << ( icmp_ln23_fu_210_p2 );

    SC_METHOD(thread_samples_fu_236_p2);
    sensitive << ( samples_1_fu_74 );

    SC_METHOD(thread_trace_32_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln20_fu_176_p2 );
    sensitive << ( trace_32_TVALID_int );

    SC_METHOD(thread_trace_32_TREADY);
    sensitive << ( trace_32_TVALID );
    sensitive << ( regslice_both_trace_32_data_V_U_ack_in );

    SC_METHOD(thread_trace_32_TREADY_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln20_fu_176_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_trace_temp_last_V_fu_231_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln20_fu_176_p2 );
    sensitive << ( add_ln27_reg_271 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_ln23_fu_215_p2 );
    sensitive << ( samples_1_fu_74 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln20_fu_176_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( regslice_both_capture_32_data_V_U_apdone_blk );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "trace_cntrl_32_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, trace_32_TDATA, "(port)trace_32_TDATA");
    sc_trace(mVcdFile, trace_32_TVALID, "(port)trace_32_TVALID");
    sc_trace(mVcdFile, trace_32_TREADY, "(port)trace_32_TREADY");
    sc_trace(mVcdFile, trace_32_TKEEP, "(port)trace_32_TKEEP");
    sc_trace(mVcdFile, trace_32_TSTRB, "(port)trace_32_TSTRB");
    sc_trace(mVcdFile, trace_32_TUSER, "(port)trace_32_TUSER");
    sc_trace(mVcdFile, trace_32_TLAST, "(port)trace_32_TLAST");
    sc_trace(mVcdFile, trace_32_TID, "(port)trace_32_TID");
    sc_trace(mVcdFile, trace_32_TDEST, "(port)trace_32_TDEST");
    sc_trace(mVcdFile, capture_32_TDATA, "(port)capture_32_TDATA");
    sc_trace(mVcdFile, capture_32_TVALID, "(port)capture_32_TVALID");
    sc_trace(mVcdFile, capture_32_TREADY, "(port)capture_32_TREADY");
    sc_trace(mVcdFile, capture_32_TKEEP, "(port)capture_32_TKEEP");
    sc_trace(mVcdFile, capture_32_TSTRB, "(port)capture_32_TSTRB");
    sc_trace(mVcdFile, capture_32_TUSER, "(port)capture_32_TUSER");
    sc_trace(mVcdFile, capture_32_TLAST, "(port)capture_32_TLAST");
    sc_trace(mVcdFile, capture_32_TID, "(port)capture_32_TID");
    sc_trace(mVcdFile, capture_32_TDEST, "(port)capture_32_TDEST");
    sc_trace(mVcdFile, s_axi_trace_cntrl_AWVALID, "(port)s_axi_trace_cntrl_AWVALID");
    sc_trace(mVcdFile, s_axi_trace_cntrl_AWREADY, "(port)s_axi_trace_cntrl_AWREADY");
    sc_trace(mVcdFile, s_axi_trace_cntrl_AWADDR, "(port)s_axi_trace_cntrl_AWADDR");
    sc_trace(mVcdFile, s_axi_trace_cntrl_WVALID, "(port)s_axi_trace_cntrl_WVALID");
    sc_trace(mVcdFile, s_axi_trace_cntrl_WREADY, "(port)s_axi_trace_cntrl_WREADY");
    sc_trace(mVcdFile, s_axi_trace_cntrl_WDATA, "(port)s_axi_trace_cntrl_WDATA");
    sc_trace(mVcdFile, s_axi_trace_cntrl_WSTRB, "(port)s_axi_trace_cntrl_WSTRB");
    sc_trace(mVcdFile, s_axi_trace_cntrl_ARVALID, "(port)s_axi_trace_cntrl_ARVALID");
    sc_trace(mVcdFile, s_axi_trace_cntrl_ARREADY, "(port)s_axi_trace_cntrl_ARREADY");
    sc_trace(mVcdFile, s_axi_trace_cntrl_ARADDR, "(port)s_axi_trace_cntrl_ARADDR");
    sc_trace(mVcdFile, s_axi_trace_cntrl_RVALID, "(port)s_axi_trace_cntrl_RVALID");
    sc_trace(mVcdFile, s_axi_trace_cntrl_RREADY, "(port)s_axi_trace_cntrl_RREADY");
    sc_trace(mVcdFile, s_axi_trace_cntrl_RDATA, "(port)s_axi_trace_cntrl_RDATA");
    sc_trace(mVcdFile, s_axi_trace_cntrl_RRESP, "(port)s_axi_trace_cntrl_RRESP");
    sc_trace(mVcdFile, s_axi_trace_cntrl_BVALID, "(port)s_axi_trace_cntrl_BVALID");
    sc_trace(mVcdFile, s_axi_trace_cntrl_BREADY, "(port)s_axi_trace_cntrl_BREADY");
    sc_trace(mVcdFile, s_axi_trace_cntrl_BRESP, "(port)s_axi_trace_cntrl_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, trigger_V, "trigger_V");
    sc_trace(mVcdFile, length_r, "length_r");
    sc_trace(mVcdFile, trace_32_TDATA_blk_n, "trace_32_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln20_fu_176_p2, "icmp_ln20_fu_176_p2");
    sc_trace(mVcdFile, capture_32_TDATA_blk_n, "capture_32_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, icmp_ln20_reg_276, "icmp_ln20_reg_276");
    sc_trace(mVcdFile, or_ln23_reg_310, "or_ln23_reg_310");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln20_reg_276_pp0_iter1_reg, "icmp_ln20_reg_276_pp0_iter1_reg");
    sc_trace(mVcdFile, or_ln23_reg_310_pp0_iter1_reg, "or_ln23_reg_310_pp0_iter1_reg");
    sc_trace(mVcdFile, match_0_reg_133, "match_0_reg_133");
    sc_trace(mVcdFile, i_0_reg_144, "i_0_reg_144");
    sc_trace(mVcdFile, length_read_reg_260, "length_read_reg_260");
    sc_trace(mVcdFile, trigger_V_read_reg_265, "trigger_V_read_reg_265");
    sc_trace(mVcdFile, add_ln27_fu_165_p2, "add_ln27_fu_165_p2");
    sc_trace(mVcdFile, add_ln27_reg_271, "add_ln27_reg_271");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_predicate_op58_write_state3, "ap_predicate_op58_write_state3");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_predicate_op61_write_state4, "ap_predicate_op61_write_state4");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, trace_temp_data_V_reg_280, "trace_temp_data_V_reg_280");
    sc_trace(mVcdFile, trace_temp_keep_V_reg_285, "trace_temp_keep_V_reg_285");
    sc_trace(mVcdFile, trace_temp_strb_V_reg_290, "trace_temp_strb_V_reg_290");
    sc_trace(mVcdFile, trace_temp_user_V_reg_295, "trace_temp_user_V_reg_295");
    sc_trace(mVcdFile, trace_temp_id_V_reg_300, "trace_temp_id_V_reg_300");
    sc_trace(mVcdFile, trace_temp_dest_V_reg_305, "trace_temp_dest_V_reg_305");
    sc_trace(mVcdFile, or_ln23_fu_215_p2, "or_ln23_fu_215_p2");
    sc_trace(mVcdFile, trace_temp_last_V_fu_231_p2, "trace_temp_last_V_fu_231_p2");
    sc_trace(mVcdFile, trace_temp_last_V_reg_315, "trace_temp_last_V_reg_315");
    sc_trace(mVcdFile, i_2_fu_247_p2, "i_2_fu_247_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_phi_mux_match_0_phi_fu_137_p4, "ap_phi_mux_match_0_phi_fu_137_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_1_phi_fu_158_p4, "ap_phi_mux_i_1_phi_fu_158_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_i_1_reg_155, "ap_phi_reg_pp0_iter0_i_1_reg_155");
    sc_trace(mVcdFile, i_fu_221_p2, "i_fu_221_p2");
    sc_trace(mVcdFile, samples_1_fu_74, "samples_1_fu_74");
    sc_trace(mVcdFile, samples_fu_236_p2, "samples_fu_236_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, and_ln23_fu_205_p2, "and_ln23_fu_205_p2");
    sc_trace(mVcdFile, icmp_ln23_fu_210_p2, "icmp_ln23_fu_210_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, regslice_both_capture_32_data_V_U_apdone_blk, "regslice_both_capture_32_data_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, regslice_both_trace_32_data_V_U_apdone_blk, "regslice_both_trace_32_data_V_U_apdone_blk");
    sc_trace(mVcdFile, trace_32_TDATA_int, "trace_32_TDATA_int");
    sc_trace(mVcdFile, trace_32_TVALID_int, "trace_32_TVALID_int");
    sc_trace(mVcdFile, trace_32_TREADY_int, "trace_32_TREADY_int");
    sc_trace(mVcdFile, regslice_both_trace_32_data_V_U_ack_in, "regslice_both_trace_32_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_trace_32_keep_V_U_apdone_blk, "regslice_both_trace_32_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, trace_32_TKEEP_int, "trace_32_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_trace_32_keep_V_U_vld_out, "regslice_both_trace_32_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_trace_32_keep_V_U_ack_in, "regslice_both_trace_32_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_trace_32_strb_V_U_apdone_blk, "regslice_both_trace_32_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, trace_32_TSTRB_int, "trace_32_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_trace_32_strb_V_U_vld_out, "regslice_both_trace_32_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_trace_32_strb_V_U_ack_in, "regslice_both_trace_32_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_trace_32_user_V_U_apdone_blk, "regslice_both_trace_32_user_V_U_apdone_blk");
    sc_trace(mVcdFile, trace_32_TUSER_int, "trace_32_TUSER_int");
    sc_trace(mVcdFile, regslice_both_trace_32_user_V_U_vld_out, "regslice_both_trace_32_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_trace_32_user_V_U_ack_in, "regslice_both_trace_32_user_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_trace_32_last_V_U_apdone_blk, "regslice_both_trace_32_last_V_U_apdone_blk");
    sc_trace(mVcdFile, trace_32_TLAST_int, "trace_32_TLAST_int");
    sc_trace(mVcdFile, regslice_both_trace_32_last_V_U_vld_out, "regslice_both_trace_32_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_trace_32_last_V_U_ack_in, "regslice_both_trace_32_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_trace_32_id_V_U_apdone_blk, "regslice_both_trace_32_id_V_U_apdone_blk");
    sc_trace(mVcdFile, trace_32_TID_int, "trace_32_TID_int");
    sc_trace(mVcdFile, regslice_both_trace_32_id_V_U_vld_out, "regslice_both_trace_32_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_trace_32_id_V_U_ack_in, "regslice_both_trace_32_id_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_trace_32_dest_V_U_apdone_blk, "regslice_both_trace_32_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, trace_32_TDEST_int, "trace_32_TDEST_int");
    sc_trace(mVcdFile, regslice_both_trace_32_dest_V_U_vld_out, "regslice_both_trace_32_dest_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_trace_32_dest_V_U_ack_in, "regslice_both_trace_32_dest_V_U_ack_in");
    sc_trace(mVcdFile, capture_32_TVALID_int, "capture_32_TVALID_int");
    sc_trace(mVcdFile, capture_32_TREADY_int, "capture_32_TREADY_int");
    sc_trace(mVcdFile, regslice_both_capture_32_data_V_U_vld_out, "regslice_both_capture_32_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_capture_32_keep_V_U_apdone_blk, "regslice_both_capture_32_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_capture_32_keep_V_U_ack_in_dummy, "regslice_both_capture_32_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_capture_32_keep_V_U_vld_out, "regslice_both_capture_32_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_capture_32_strb_V_U_apdone_blk, "regslice_both_capture_32_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_capture_32_strb_V_U_ack_in_dummy, "regslice_both_capture_32_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_capture_32_strb_V_U_vld_out, "regslice_both_capture_32_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_capture_32_user_V_U_apdone_blk, "regslice_both_capture_32_user_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_capture_32_user_V_U_ack_in_dummy, "regslice_both_capture_32_user_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_capture_32_user_V_U_vld_out, "regslice_both_capture_32_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_capture_32_last_V_U_apdone_blk, "regslice_both_capture_32_last_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_capture_32_last_V_U_ack_in_dummy, "regslice_both_capture_32_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_capture_32_last_V_U_vld_out, "regslice_both_capture_32_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_capture_32_id_V_U_apdone_blk, "regslice_both_capture_32_id_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_capture_32_id_V_U_ack_in_dummy, "regslice_both_capture_32_id_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_capture_32_id_V_U_vld_out, "regslice_both_capture_32_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_capture_32_dest_V_U_apdone_blk, "regslice_both_capture_32_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_capture_32_dest_V_U_ack_in_dummy, "regslice_both_capture_32_dest_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_capture_32_dest_V_U_vld_out, "regslice_both_capture_32_dest_V_U_vld_out");
#endif

    }
    mHdltvinHandle.open("trace_cntrl_32.hdltvin.dat");
    mHdltvoutHandle.open("trace_cntrl_32.hdltvout.dat");
}

trace_cntrl_32::~trace_cntrl_32() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete trace_cntrl_32_trace_cntrl_s_axi_U;
    delete regslice_both_trace_32_data_V_U;
    delete regslice_both_trace_32_keep_V_U;
    delete regslice_both_trace_32_strb_V_U;
    delete regslice_both_trace_32_user_V_U;
    delete regslice_both_trace_32_last_V_U;
    delete regslice_both_trace_32_id_V_U;
    delete regslice_both_trace_32_dest_V_U;
    delete regslice_both_capture_32_data_V_U;
    delete regslice_both_capture_32_keep_V_U;
    delete regslice_both_capture_32_strb_V_U;
    delete regslice_both_capture_32_user_V_U;
    delete regslice_both_capture_32_last_V_U;
    delete regslice_both_capture_32_id_V_U;
    delete regslice_both_capture_32_dest_V_U;
}

void trace_cntrl_32::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void trace_cntrl_32::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_144 = i_2_fu_247_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_144 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_reg_276.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        match_0_reg_133 = or_ln23_reg_310.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        match_0_reg_133 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_ln23_fu_215_p2.read()))) {
        samples_1_fu_74 = samples_fu_236_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        samples_1_fu_74 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        add_ln27_reg_271 = add_ln27_fu_165_p2.read();
        length_read_reg_260 = length_r.read();
        trigger_V_read_reg_265 = trigger_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln20_reg_276 = icmp_ln20_fu_176_p2.read();
        icmp_ln20_reg_276_pp0_iter1_reg = icmp_ln20_reg_276.read();
        or_ln23_reg_310_pp0_iter1_reg = or_ln23_reg_310.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        or_ln23_reg_310 = or_ln23_fu_215_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        trace_temp_data_V_reg_280 = trace_32_TDATA_int.read();
        trace_temp_dest_V_reg_305 = trace_32_TDEST_int.read();
        trace_temp_id_V_reg_300 = trace_32_TID_int.read();
        trace_temp_keep_V_reg_285 = trace_32_TKEEP_int.read();
        trace_temp_strb_V_reg_290 = trace_32_TSTRB_int.read();
        trace_temp_user_V_reg_295 = trace_32_TUSER_int.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln23_fu_215_p2.read()))) {
        trace_temp_last_V_reg_315 = trace_temp_last_V_fu_231_p2.read();
    }
}

void trace_cntrl_32::thread_add_ln27_fu_165_p2() {
    add_ln27_fu_165_p2 = (!length_r.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(length_r.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void trace_cntrl_32::thread_and_ln23_fu_205_p2() {
    and_ln23_fu_205_p2 = (trace_32_TDATA_int.read() & trigger_V_read_reg_265.read());
}

void trace_cntrl_32::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void trace_cntrl_32::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void trace_cntrl_32::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void trace_cntrl_32::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void trace_cntrl_32::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, trace_32_TVALID_int.read()));
}

void trace_cntrl_32::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, trace_32_TVALID_int.read())));
}

void trace_cntrl_32::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, trace_32_TVALID_int.read())));
}

void trace_cntrl_32::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, trace_32_TVALID_int.read()));
}

void trace_cntrl_32::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_write_state3.read()) && esl_seteq<1,1,1>(ap_const_logic_0, capture_32_TREADY_int.read()));
}

void trace_cntrl_32::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void trace_cntrl_32::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_write_state4.read()) && esl_seteq<1,1,1>(ap_const_logic_0, capture_32_TREADY_int.read()));
}

void trace_cntrl_32::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void trace_cntrl_32::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void trace_cntrl_32::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(regslice_both_capture_32_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void trace_cntrl_32::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void trace_cntrl_32::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void trace_cntrl_32::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void trace_cntrl_32::thread_ap_phi_mux_i_1_phi_fu_158_p4() {
    if (esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1)) {
        if (esl_seteq<1,1,1>(or_ln23_fu_215_p2.read(), ap_const_lv1_0)) {
            ap_phi_mux_i_1_phi_fu_158_p4 = i_fu_221_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln23_fu_215_p2.read())) {
            ap_phi_mux_i_1_phi_fu_158_p4 = i_0_reg_144.read();
        } else {
            ap_phi_mux_i_1_phi_fu_158_p4 = ap_phi_reg_pp0_iter0_i_1_reg_155.read();
        }
    } else {
        ap_phi_mux_i_1_phi_fu_158_p4 = ap_phi_reg_pp0_iter0_i_1_reg_155.read();
    }
}

void trace_cntrl_32::thread_ap_phi_mux_match_0_phi_fu_137_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_reg_276.read()))) {
        ap_phi_mux_match_0_phi_fu_137_p4 = or_ln23_reg_310.read();
    } else {
        ap_phi_mux_match_0_phi_fu_137_p4 = match_0_reg_133.read();
    }
}

void trace_cntrl_32::thread_ap_phi_reg_pp0_iter0_i_1_reg_155() {
    ap_phi_reg_pp0_iter0_i_1_reg_155 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void trace_cntrl_32::thread_ap_predicate_op58_write_state3() {
    ap_predicate_op58_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_reg_276.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln23_reg_310.read()));
}

void trace_cntrl_32::thread_ap_predicate_op61_write_state4() {
    ap_predicate_op61_write_state4 = (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_reg_276_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln23_reg_310_pp0_iter1_reg.read()));
}

void trace_cntrl_32::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(regslice_both_capture_32_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void trace_cntrl_32::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void trace_cntrl_32::thread_capture_32_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_reg_276.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_ln23_reg_310.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_reg_276_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_ln23_reg_310_pp0_iter1_reg.read())))) {
        capture_32_TDATA_blk_n = capture_32_TREADY_int.read();
    } else {
        capture_32_TDATA_blk_n = ap_const_logic_1;
    }
}

void trace_cntrl_32::thread_capture_32_TVALID() {
    capture_32_TVALID = regslice_both_capture_32_data_V_U_vld_out.read();
}

void trace_cntrl_32::thread_capture_32_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_write_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        capture_32_TVALID_int = ap_const_logic_1;
    } else {
        capture_32_TVALID_int = ap_const_logic_0;
    }
}

void trace_cntrl_32::thread_i_2_fu_247_p2() {
    i_2_fu_247_p2 = (!ap_phi_mux_i_1_phi_fu_158_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_i_1_phi_fu_158_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void trace_cntrl_32::thread_i_fu_221_p2() {
    i_fu_221_p2 = (!i_0_reg_144.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(i_0_reg_144.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void trace_cntrl_32::thread_icmp_ln20_fu_176_p2() {
    icmp_ln20_fu_176_p2 = (!i_0_reg_144.read().is_01() || !length_read_reg_260.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_0_reg_144.read()) < sc_bigint<32>(length_read_reg_260.read()));
}

void trace_cntrl_32::thread_icmp_ln23_fu_210_p2() {
    icmp_ln23_fu_210_p2 = (!and_ln23_fu_205_p2.read().is_01() || !trigger_V_read_reg_265.read().is_01())? sc_lv<1>(): sc_lv<1>(and_ln23_fu_205_p2.read() == trigger_V_read_reg_265.read());
}

void trace_cntrl_32::thread_or_ln23_fu_215_p2() {
    or_ln23_fu_215_p2 = (icmp_ln23_fu_210_p2.read() | ap_phi_mux_match_0_phi_fu_137_p4.read());
}

void trace_cntrl_32::thread_samples_fu_236_p2() {
    samples_fu_236_p2 = (!samples_1_fu_74.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(samples_1_fu_74.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void trace_cntrl_32::thread_trace_32_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1))) {
        trace_32_TDATA_blk_n = trace_32_TVALID_int.read();
    } else {
        trace_32_TDATA_blk_n = ap_const_logic_1;
    }
}

void trace_cntrl_32::thread_trace_32_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, trace_32_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_trace_32_data_V_U_ack_in.read()))) {
        trace_32_TREADY = ap_const_logic_1;
    } else {
        trace_32_TREADY = ap_const_logic_0;
    }
}

void trace_cntrl_32::thread_trace_32_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        trace_32_TREADY_int = ap_const_logic_1;
    } else {
        trace_32_TREADY_int = ap_const_logic_0;
    }
}

void trace_cntrl_32::thread_trace_temp_last_V_fu_231_p2() {
    trace_temp_last_V_fu_231_p2 = (!samples_1_fu_74.read().is_01() || !add_ln27_reg_271.read().is_01())? sc_lv<1>(): sc_lv<1>(samples_1_fu_74.read() == add_ln27_reg_271.read());
}

void trace_cntrl_32::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln20_fu_176_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(regslice_both_capture_32_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void trace_cntrl_32::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"trace_32_TDATA\" :  \"" << trace_32_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"trace_32_TVALID\" :  \"" << trace_32_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"trace_32_TREADY\" :  \"" << trace_32_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"trace_32_TKEEP\" :  \"" << trace_32_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"trace_32_TSTRB\" :  \"" << trace_32_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"trace_32_TUSER\" :  \"" << trace_32_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"trace_32_TLAST\" :  \"" << trace_32_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"trace_32_TID\" :  \"" << trace_32_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"trace_32_TDEST\" :  \"" << trace_32_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"capture_32_TDATA\" :  \"" << capture_32_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"capture_32_TVALID\" :  \"" << capture_32_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"capture_32_TREADY\" :  \"" << capture_32_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"capture_32_TKEEP\" :  \"" << capture_32_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"capture_32_TSTRB\" :  \"" << capture_32_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"capture_32_TUSER\" :  \"" << capture_32_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"capture_32_TLAST\" :  \"" << capture_32_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"capture_32_TID\" :  \"" << capture_32_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"capture_32_TDEST\" :  \"" << capture_32_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_AWVALID\" :  \"" << s_axi_trace_cntrl_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_AWREADY\" :  \"" << s_axi_trace_cntrl_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_AWADDR\" :  \"" << s_axi_trace_cntrl_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_WVALID\" :  \"" << s_axi_trace_cntrl_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_WREADY\" :  \"" << s_axi_trace_cntrl_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_WDATA\" :  \"" << s_axi_trace_cntrl_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_WSTRB\" :  \"" << s_axi_trace_cntrl_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_ARVALID\" :  \"" << s_axi_trace_cntrl_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_ARREADY\" :  \"" << s_axi_trace_cntrl_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_ARADDR\" :  \"" << s_axi_trace_cntrl_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_RVALID\" :  \"" << s_axi_trace_cntrl_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_RREADY\" :  \"" << s_axi_trace_cntrl_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_RDATA\" :  \"" << s_axi_trace_cntrl_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_RRESP\" :  \"" << s_axi_trace_cntrl_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_BVALID\" :  \"" << s_axi_trace_cntrl_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_trace_cntrl_BREADY\" :  \"" << s_axi_trace_cntrl_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_trace_cntrl_BRESP\" :  \"" << s_axi_trace_cntrl_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

