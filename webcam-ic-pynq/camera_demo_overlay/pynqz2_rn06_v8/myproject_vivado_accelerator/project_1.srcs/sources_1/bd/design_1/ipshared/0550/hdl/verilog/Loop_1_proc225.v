// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_1_proc225 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_local_V_data_0_V_din,
        in_local_V_data_0_V_full_n,
        in_local_V_data_0_V_write,
        in_local_V_data_1_V_din,
        in_local_V_data_1_V_full_n,
        in_local_V_data_1_V_write,
        in_local_V_data_2_V_din,
        in_local_V_data_2_V_full_n,
        in_local_V_data_2_V_write,
        in_r_TLAST,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TDATA,
        ap_return
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [7:0] in_local_V_data_0_V_din;
input   in_local_V_data_0_V_full_n;
output   in_local_V_data_0_V_write;
output  [7:0] in_local_V_data_1_V_din;
input   in_local_V_data_1_V_full_n;
output   in_local_V_data_1_V_write;
output  [7:0] in_local_V_data_2_V_din;
input   in_local_V_data_2_V_full_n;
output   in_local_V_data_2_V_write;
input  [0:0] in_r_TLAST;
input   in_r_TVALID;
output   in_r_TREADY;
input  [31:0] in_r_TDATA;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_local_V_data_0_V_write;
reg in_local_V_data_1_V_write;
reg in_local_V_data_2_V_write;
reg in_r_TREADY;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_local_V_data_0_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln26_fu_200_p2;
reg    in_local_V_data_1_V_blk_n;
reg    in_local_V_data_2_V_blk_n;
reg    in_r_TDATA_blk_n;
wire   [10:0] i_fu_194_p2;
reg   [10:0] i_reg_695;
wire    ap_CS_fsm_state2;
wire   [1:0] j_fu_206_p2;
reg   [1:0] j_reg_703;
wire    io_acc_block_signal_op40;
reg    ap_block_state3;
reg   [31:0] in_data_tmp_reg_708;
wire   [53:0] man_V_2_fu_311_p3;
reg   [53:0] man_V_2_reg_714;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln571_fu_319_p2;
reg   [0:0] icmp_ln571_reg_719;
wire   [0:0] icmp_ln581_fu_331_p2;
reg   [0:0] icmp_ln581_reg_725;
wire   [11:0] add_ln581_fu_337_p2;
reg   [11:0] add_ln581_reg_732;
wire   [11:0] sub_ln581_fu_343_p2;
reg   [11:0] sub_ln581_reg_737;
wire   [0:0] icmp_ln582_fu_349_p2;
reg   [0:0] icmp_ln582_reg_742;
wire   [7:0] trunc_ln583_fu_355_p1;
reg   [7:0] trunc_ln583_reg_748;
wire   [7:0] select_ln603_fu_491_p3;
reg   [7:0] select_ln603_reg_754;
wire    ap_CS_fsm_state5;
wire   [0:0] or_ln603_fu_499_p2;
reg   [0:0] or_ln603_reg_759;
wire   [7:0] select_ln603_1_fu_505_p3;
reg   [7:0] select_ln603_1_reg_764;
wire   [0:0] or_ln603_2_fu_518_p2;
reg   [0:0] or_ln603_2_reg_769;
reg   [10:0] i_0_i_reg_151;
reg    ap_block_state1;
reg   [1:0] j_0_i_reg_162;
wire   [0:0] icmp_ln23_fu_188_p2;
wire    ap_CS_fsm_state6;
reg   [0:0] is_last_1_fu_122;
wire   [0:0] is_last_fu_221_p2;
reg   [23:0] ctype_data_V_fu_126;
wire   [23:0] ctype_data_V_1_fu_668_p2;
wire   [63:0] grp_fu_174_p1;
wire   [63:0] ireg_V_fu_259_p1;
wire   [10:0] exp_tmp_V_fu_275_p4;
wire   [51:0] trunc_ln565_fu_289_p1;
wire   [52:0] tmp_s_fu_293_p3;
wire   [53:0] p_Result_9_fu_301_p1;
wire   [0:0] p_Result_s_fu_267_p3;
wire   [53:0] man_V_1_fu_305_p2;
wire   [62:0] trunc_ln556_fu_263_p1;
wire   [11:0] zext_ln461_fu_285_p1;
wire   [11:0] F2_fu_325_p2;
wire  signed [11:0] sh_amt_fu_359_p3;
wire   [8:0] tmp_139_fu_378_p4;
wire  signed [31:0] sext_ln581_fu_364_p1;
wire   [53:0] zext_ln586_fu_394_p1;
wire   [53:0] ashr_ln586_fu_398_p2;
wire   [31:0] bitcast_ln696_fu_407_p1;
wire   [0:0] tmp_140_fu_410_p3;
wire   [7:0] trunc_ln581_fu_368_p1;
wire   [0:0] xor_ln571_fu_431_p2;
wire   [0:0] or_ln582_fu_441_p2;
wire   [0:0] xor_ln582_fu_445_p2;
wire   [0:0] icmp_ln585_fu_372_p2;
wire   [0:0] and_ln581_fu_451_p2;
wire   [0:0] xor_ln585_fu_456_p2;
wire   [0:0] or_ln581_fu_474_p2;
wire   [0:0] icmp_ln603_fu_388_p2;
wire   [0:0] xor_ln581_fu_479_p2;
wire   [0:0] and_ln603_fu_485_p2;
wire   [7:0] shl_ln604_fu_426_p2;
wire   [7:0] trunc_ln586_fu_403_p1;
wire   [0:0] and_ln585_1_fu_468_p2;
wire   [0:0] and_ln585_fu_462_p2;
wire   [7:0] select_ln588_fu_418_p3;
wire   [0:0] and_ln582_fu_436_p2;
wire   [0:0] or_ln603_1_fu_512_p2;
wire   [7:0] select_ln603_2_fu_524_p3;
wire   [4:0] shl_ln_fu_536_p3;
wire   [4:0] empty_367_fu_544_p2;
wire   [7:0] select_ln603_3_fu_529_p3;
wire   [0:0] icmp_ln356_fu_550_p2;
wire   [4:0] sub_ln356_fu_560_p2;
wire   [4:0] select_ln356_fu_566_p3;
wire   [4:0] select_ln356_2_fu_582_p3;
wire   [4:0] select_ln356_1_fu_574_p3;
wire   [4:0] sub_ln356_1_fu_590_p2;
wire   [23:0] zext_ln356_fu_556_p1;
wire   [23:0] zext_ln356_1_fu_596_p1;
wire   [23:0] shl_ln356_fu_608_p2;
reg   [23:0] tmp_141_fu_614_p4;
wire   [23:0] zext_ln356_2_fu_600_p1;
wire   [23:0] zext_ln356_3_fu_604_p1;
wire   [23:0] shl_ln356_1_fu_632_p2;
wire   [23:0] lshr_ln356_fu_638_p2;
wire   [23:0] and_ln356_fu_644_p2;
wire   [23:0] xor_ln356_fu_650_p2;
wire   [23:0] select_ln356_3_fu_624_p3;
wire   [23:0] and_ln356_1_fu_656_p2;
wire   [23:0] and_ln356_2_fu_662_p2;
reg    grp_fu_174_ce;
reg   [5:0] ap_NS_fsm;
wire    regslice_both_in_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int;
wire    in_r_TVALID_int;
reg    in_r_TREADY_int;
wire    regslice_both_in_last_V_U_ack_in;
wire    regslice_both_in_data_U_apdone_blk;
wire   [31:0] in_r_TDATA_int;
wire    regslice_both_in_data_U_vld_out;
wire    regslice_both_in_data_U_ack_in;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
end

myproject_axi_fpext_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_axi_fpext_32ns_64_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(in_r_TDATA_int),
    .ce(grp_fu_174_ce),
    .dout(grp_fu_174_p1)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_last_V_U_ack_in),
    .data_out(in_r_TLAST_int),
    .vld_out(in_r_TVALID_int),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_data_U_ack_in),
    .data_out(in_r_TDATA_int),
    .vld_out(regslice_both_in_data_U_vld_out),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_data_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln23_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (icmp_ln26_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_i_reg_151 <= i_reg_695;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_151 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (icmp_ln26_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        is_last_1_fu_122 <= is_last_fu_221_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        is_last_1_fu_122 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_i_reg_162 <= j_reg_703;
    end else if (((icmp_ln23_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_i_reg_162 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln581_reg_732 <= add_ln581_fu_337_p2;
        icmp_ln571_reg_719 <= icmp_ln571_fu_319_p2;
        icmp_ln581_reg_725 <= icmp_ln581_fu_331_p2;
        icmp_ln582_reg_742 <= icmp_ln582_fu_349_p2;
        man_V_2_reg_714 <= man_V_2_fu_311_p3;
        sub_ln581_reg_737 <= sub_ln581_fu_343_p2;
        trunc_ln583_reg_748 <= trunc_ln583_fu_355_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ctype_data_V_fu_126 <= ctype_data_V_1_fu_668_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_695 <= i_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (icmp_ln26_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in_data_tmp_reg_708 <= in_r_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_703 <= j_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        or_ln603_2_reg_769 <= or_ln603_2_fu_518_p2;
        or_ln603_reg_759 <= or_ln603_fu_499_p2;
        select_ln603_1_reg_764 <= select_ln603_1_fu_505_p3;
        select_ln603_reg_754 <= select_ln603_fu_491_p3;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_fu_174_ce = 1'b1;
    end else begin
        grp_fu_174_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln26_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_0_V_blk_n = in_local_V_data_0_V_full_n;
    end else begin
        in_local_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (icmp_ln26_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_0_V_write = 1'b1;
    end else begin
        in_local_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln26_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_1_V_blk_n = in_local_V_data_1_V_full_n;
    end else begin
        in_local_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (icmp_ln26_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_1_V_write = 1'b1;
    end else begin
        in_local_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln26_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_2_V_blk_n = in_local_V_data_2_V_full_n;
    end else begin
        in_local_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (icmp_ln26_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_2_V_write = 1'b1;
    end else begin
        in_local_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln26_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_r_TVALID == 1'b1) & (regslice_both_in_last_V_U_ack_in == 1'b1))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (icmp_ln26_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in_r_TREADY_int = 1'b1;
    end else begin
        in_r_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (icmp_ln26_fu_200_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0))) & (icmp_ln26_fu_200_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_325_p2 = (12'd1075 - zext_ln461_fu_285_p1);

assign add_ln581_fu_337_p2 = ($signed(12'd4088) + $signed(F2_fu_325_p2));

assign and_ln356_1_fu_656_p2 = (xor_ln356_fu_650_p2 & ctype_data_V_fu_126);

assign and_ln356_2_fu_662_p2 = (select_ln356_3_fu_624_p3 & and_ln356_fu_644_p2);

assign and_ln356_fu_644_p2 = (shl_ln356_1_fu_632_p2 & lshr_ln356_fu_638_p2);

assign and_ln581_fu_451_p2 = (xor_ln582_fu_445_p2 & icmp_ln581_reg_725);

assign and_ln582_fu_436_p2 = (xor_ln571_fu_431_p2 & icmp_ln582_reg_742);

assign and_ln585_1_fu_468_p2 = (icmp_ln585_fu_372_p2 & and_ln581_fu_451_p2);

assign and_ln585_fu_462_p2 = (xor_ln585_fu_456_p2 & and_ln581_fu_451_p2);

assign and_ln603_fu_485_p2 = (xor_ln581_fu_479_p2 & icmp_ln603_fu_388_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = (((icmp_ln26_fu_200_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln26_fu_200_p2 == 1'd1) & (io_acc_block_signal_op40 == 1'b0)));
end

assign ap_ready = internal_ap_ready;

assign ap_return = is_last_1_fu_122;

assign ashr_ln586_fu_398_p2 = $signed(man_V_2_reg_714) >>> zext_ln586_fu_394_p1;

assign bitcast_ln696_fu_407_p1 = in_data_tmp_reg_708;

assign ctype_data_V_1_fu_668_p2 = (and_ln356_2_fu_662_p2 | and_ln356_1_fu_656_p2);

assign empty_367_fu_544_p2 = (shl_ln_fu_536_p3 | 5'd7);

assign exp_tmp_V_fu_275_p4 = {{ireg_V_fu_259_p1[62:52]}};

assign i_fu_194_p2 = (i_0_i_reg_151 + 11'd1);

assign icmp_ln23_fu_188_p2 = ((i_0_i_reg_151 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_200_p2 = ((j_0_i_reg_162 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln356_fu_550_p2 = ((shl_ln_fu_536_p3 > empty_367_fu_544_p2) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_319_p2 = ((trunc_ln556_fu_263_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_331_p2 = (($signed(F2_fu_325_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_349_p2 = ((F2_fu_325_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_372_p2 = ((sh_amt_fu_359_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_388_p2 = ((tmp_139_fu_378_p4 == 9'd0) ? 1'b1 : 1'b0);

assign in_local_V_data_0_V_din = ctype_data_V_fu_126[7:0];

assign in_local_V_data_1_V_din = {{ctype_data_V_fu_126[15:8]}};

assign in_local_V_data_2_V_din = {{ctype_data_V_fu_126[23:16]}};

assign io_acc_block_signal_op40 = (in_local_V_data_2_V_full_n & in_local_V_data_1_V_full_n & in_local_V_data_0_V_full_n);

assign ireg_V_fu_259_p1 = grp_fu_174_p1;

assign is_last_fu_221_p2 = (is_last_1_fu_122 | in_r_TLAST_int);

assign j_fu_206_p2 = (j_0_i_reg_162 + 2'd1);

assign lshr_ln356_fu_638_p2 = 24'd16777215 >> zext_ln356_3_fu_604_p1;

assign man_V_1_fu_305_p2 = (54'd0 - p_Result_9_fu_301_p1);

assign man_V_2_fu_311_p3 = ((p_Result_s_fu_267_p3[0:0] === 1'b1) ? man_V_1_fu_305_p2 : p_Result_9_fu_301_p1);

assign or_ln581_fu_474_p2 = (or_ln582_fu_441_p2 | icmp_ln581_reg_725);

assign or_ln582_fu_441_p2 = (icmp_ln582_reg_742 | icmp_ln571_reg_719);

assign or_ln603_1_fu_512_p2 = (and_ln585_fu_462_p2 | and_ln582_fu_436_p2);

assign or_ln603_2_fu_518_p2 = (or_ln603_fu_499_p2 | or_ln603_1_fu_512_p2);

assign or_ln603_fu_499_p2 = (and_ln603_fu_485_p2 | and_ln585_1_fu_468_p2);

assign p_Result_9_fu_301_p1 = tmp_s_fu_293_p3;

assign p_Result_s_fu_267_p3 = ireg_V_fu_259_p1[32'd63];

assign select_ln356_1_fu_574_p3 = ((icmp_ln356_fu_550_p2[0:0] === 1'b1) ? empty_367_fu_544_p2 : shl_ln_fu_536_p3);

assign select_ln356_2_fu_582_p3 = ((icmp_ln356_fu_550_p2[0:0] === 1'b1) ? sub_ln356_fu_560_p2 : shl_ln_fu_536_p3);

assign select_ln356_3_fu_624_p3 = ((icmp_ln356_fu_550_p2[0:0] === 1'b1) ? tmp_141_fu_614_p4 : shl_ln356_fu_608_p2);

assign select_ln356_fu_566_p3 = ((icmp_ln356_fu_550_p2[0:0] === 1'b1) ? shl_ln_fu_536_p3 : empty_367_fu_544_p2);

assign select_ln588_fu_418_p3 = ((tmp_140_fu_410_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln603_1_fu_505_p3 = ((and_ln585_fu_462_p2[0:0] === 1'b1) ? select_ln588_fu_418_p3 : trunc_ln583_reg_748);

assign select_ln603_2_fu_524_p3 = ((or_ln603_reg_759[0:0] === 1'b1) ? select_ln603_reg_754 : select_ln603_1_reg_764);

assign select_ln603_3_fu_529_p3 = ((or_ln603_2_reg_769[0:0] === 1'b1) ? select_ln603_2_fu_524_p3 : 8'd0);

assign select_ln603_fu_491_p3 = ((and_ln603_fu_485_p2[0:0] === 1'b1) ? shl_ln604_fu_426_p2 : trunc_ln586_fu_403_p1);

assign sext_ln581_fu_364_p1 = sh_amt_fu_359_p3;

assign sh_amt_fu_359_p3 = ((icmp_ln581_reg_725[0:0] === 1'b1) ? add_ln581_reg_732 : sub_ln581_reg_737);

assign shl_ln356_1_fu_632_p2 = 24'd16777215 << zext_ln356_2_fu_600_p1;

assign shl_ln356_fu_608_p2 = zext_ln356_fu_556_p1 << zext_ln356_1_fu_596_p1;

assign shl_ln604_fu_426_p2 = trunc_ln583_reg_748 << trunc_ln581_fu_368_p1;

assign shl_ln_fu_536_p3 = {{j_0_i_reg_162}, {3'd0}};

assign start_out = real_start;

assign sub_ln356_1_fu_590_p2 = ($signed(5'd23) - $signed(select_ln356_fu_566_p3));

assign sub_ln356_fu_560_p2 = ($signed(5'd23) - $signed(shl_ln_fu_536_p3));

assign sub_ln581_fu_343_p2 = (12'd8 - F2_fu_325_p2);

assign tmp_139_fu_378_p4 = {{sh_amt_fu_359_p3[11:3]}};

assign tmp_140_fu_410_p3 = bitcast_ln696_fu_407_p1[32'd31];

integer ap_tvar_int_0;

always @ (shl_ln356_fu_608_p2) begin
    for (ap_tvar_int_0 = 24 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 23 - 0) begin
            tmp_141_fu_614_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_141_fu_614_p4[ap_tvar_int_0] = shl_ln356_fu_608_p2[23 - ap_tvar_int_0];
        end
    end
end

assign tmp_s_fu_293_p3 = {{1'd1}, {trunc_ln565_fu_289_p1}};

assign trunc_ln556_fu_263_p1 = ireg_V_fu_259_p1[62:0];

assign trunc_ln565_fu_289_p1 = ireg_V_fu_259_p1[51:0];

assign trunc_ln581_fu_368_p1 = sh_amt_fu_359_p3[7:0];

assign trunc_ln583_fu_355_p1 = man_V_2_fu_311_p3[7:0];

assign trunc_ln586_fu_403_p1 = ashr_ln586_fu_398_p2[7:0];

assign xor_ln356_fu_650_p2 = (24'd16777215 ^ and_ln356_fu_644_p2);

assign xor_ln571_fu_431_p2 = (icmp_ln571_reg_719 ^ 1'd1);

assign xor_ln581_fu_479_p2 = (or_ln581_fu_474_p2 ^ 1'd1);

assign xor_ln582_fu_445_p2 = (or_ln582_fu_441_p2 ^ 1'd1);

assign xor_ln585_fu_456_p2 = (icmp_ln585_fu_372_p2 ^ 1'd1);

assign zext_ln356_1_fu_596_p1 = select_ln356_2_fu_582_p3;

assign zext_ln356_2_fu_600_p1 = select_ln356_1_fu_574_p3;

assign zext_ln356_3_fu_604_p1 = sub_ln356_1_fu_590_p2;

assign zext_ln356_fu_556_p1 = select_ln603_3_fu_529_p3;

assign zext_ln461_fu_285_p1 = exp_tmp_V_fu_275_p4;

assign zext_ln586_fu_394_p1 = $unsigned(sext_ln581_fu_364_p1);

endmodule //Loop_1_proc225
